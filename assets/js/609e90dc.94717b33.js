"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7991],{6489:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=r(4848),o=r(8453);const a={slug:"terraform-ternary-error",title:"Bypassing Terraform error: \u201cThe true and false result expressions must have consistent types\u201d",authors:"manu",tags:["infra","terraform","workarounds","devops"]},s=void 0,i={permalink:"/blog/tech/terraform-ternary-error",source:"@site/tech/2023-03-18-terraform-ternary-errors/index.md",title:"Bypassing Terraform error: \u201cThe true and false result expressions must have consistent types\u201d",description:"Have you ever came across this Terraform error \u2014 when you intentionally want your ternary to output different types?",date:"2023-03-18T00:00:00.000Z",tags:[{label:"infra",permalink:"/blog/tech/tags/infra"},{label:"terraform",permalink:"/blog/tech/tags/terraform"},{label:"workarounds",permalink:"/blog/tech/tags/workarounds"},{label:"devops",permalink:"/blog/tech/tags/devops"}],readingTime:1.91,hasTruncateMarker:!0,authors:[{name:"Manu Magalh\xe3es",title:"DevSecOps Engineer",url:"https://github.com/magmanu",imageURL:"https://github.com/magmanu.png",key:"manu"}],frontMatter:{slug:"terraform-ternary-error",title:"Bypassing Terraform error: \u201cThe true and false result expressions must have consistent types\u201d",authors:"manu",tags:["infra","terraform","workarounds","devops"]},unlisted:!1,prevItem:{title:"Generating Dynamic JSON in Terraform",permalink:"/blog/tech/dynamic-json-in-terraform"},nextItem:{title:"How to Migrate CodeCommit to GitHub \u2014 and Keep your Amplify Pipeline",permalink:"/blog/tech/migrate-codecommit-to-github"}},l={authorsImageUrls:[void 0]},u=[];function c(e){const t={blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Have you ever came across this Terraform error \u2014 when you intentionally want your ternary to output different types?"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"The true and false result expressions must have consistent types"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"To bypass this Terraform limitation, check the tip below. I'll follow it with two examples to clarify the usage:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-hcl",children:"attribute = [\n    <desired output if true>, \n    <desired output if false>\n    ][<condition> ? 0 : 1]\n"})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>i});var n=r(6540);const o={},a=n.createContext(o);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);