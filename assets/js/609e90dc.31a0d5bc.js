"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2464],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>y});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),f=a,y=p["".concat(l,".").concat(f)]||p[f]||m[f]||o;return t?n.createElement(y,i(i({ref:r},c),{},{components:t})):n.createElement(y,i({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5665:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=t(7462),a=(t(7294),t(3905));const o={slug:"terraform-ternary-error",title:"Bypassing Terraform error: \u201cThe true and false result expressions must have consistent types\u201d",authors:"manu",tags:["infra","terraform","workarounds","devops"]},i=void 0,s={permalink:"/blog/tech/terraform-ternary-error",source:"@site/tech/2023-03-18-terraform-ternary-errors/index.md",title:"Bypassing Terraform error: \u201cThe true and false result expressions must have consistent types\u201d",description:"Have you ever came across this Terraform error \u2014 when you intentionally want your ternary to output different types?",date:"2023-03-18T00:00:00.000Z",formattedDate:"March 18, 2023",tags:[{label:"infra",permalink:"/blog/tech/tags/infra"},{label:"terraform",permalink:"/blog/tech/tags/terraform"},{label:"workarounds",permalink:"/blog/tech/tags/workarounds"},{label:"devops",permalink:"/blog/tech/tags/devops"}],readingTime:1.88,hasTruncateMarker:!0,authors:[{name:"Manu Magalh\xe3es",title:"DevSecOps Engineer",url:"https://github.com/magmanu",imageURL:"https://github.com/magmanu.png",key:"manu"}],frontMatter:{slug:"terraform-ternary-error",title:"Bypassing Terraform error: \u201cThe true and false result expressions must have consistent types\u201d",authors:"manu",tags:["infra","terraform","workarounds","devops"]},prevItem:{title:"Generating Dynamic JSON in Terraform",permalink:"/blog/tech/dynamic-json-in-terraform"},nextItem:{title:"How to Migrate CodeCommit to GitHub \u2014 and Keep your Amplify Pipeline",permalink:"/blog/tech/migrate-codecommit-to-github"}},l={authorsImageUrls:[void 0]},u=[],c={toc:u},p="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Have you ever came across this Terraform error \u2014 when you intentionally want your ternary to output different types?"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The true and false result expressions must have consistent types")),(0,a.kt)("p",null,"To bypass this Terraform limitation, check the tip below. I'll follow it with two examples to clarify the usage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terraform"},"attribute = [\n    <desired output if true>, \n    <desired output if false>\n    ][<condition> ? 0 : 1]\n")))}m.isMDXComponent=!0}}]);