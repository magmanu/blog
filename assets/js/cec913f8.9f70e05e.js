"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4393],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>d});var n=o(7294);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var p=n.createContext({}),u=function(e){var t=n.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(o),h=i,d=c["".concat(p,".").concat(h)]||c[h]||m[h]||a;return o?n.createElement(d,r(r({ref:t},s),{},{components:o})):n.createElement(d,r({ref:t},s))}));function d(e,t){var o=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=o.length,r=new Array(a);r[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var u=2;u<a;u++)r[u]=o[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},4122:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=o(7462),i=(o(7294),o(3905));const a={slug:"migrate-codecommit-to-github",title:"How to Migrate CodeCommit to GitHub \u2014 and Keep your Amplify Pipeline",authors:"manu",tags:["infra","github","amplify","aws","ci/cd","tutorial"]},r=void 0,l={permalink:"/blog/tech/migrate-codecommit-to-github",source:"@site/tech/2021-10-13-migrate-codecommit-to-github/index.md",title:"How to Migrate CodeCommit to GitHub \u2014 and Keep your Amplify Pipeline",description:"This tutorial includes guidance for three different scenarios in your GitHub administration:",date:"2021-10-13T00:00:00.000Z",formattedDate:"October 13, 2021",tags:[{label:"infra",permalink:"/blog/tech/tags/infra"},{label:"github",permalink:"/blog/tech/tags/github"},{label:"amplify",permalink:"/blog/tech/tags/amplify"},{label:"aws",permalink:"/blog/tech/tags/aws"},{label:"ci/cd",permalink:"/blog/tech/tags/ci-cd"},{label:"tutorial",permalink:"/blog/tech/tags/tutorial"}],readingTime:5.07,hasTruncateMarker:!0,authors:[{name:"Manu Magalh\xe3es",title:"DevSecOps Engineer",url:"https://github.com/magmanu",imageURL:"https://github.com/magmanu.png",key:"manu"}],frontMatter:{slug:"migrate-codecommit-to-github",title:"How to Migrate CodeCommit to GitHub \u2014 and Keep your Amplify Pipeline",authors:"manu",tags:["infra","github","amplify","aws","ci/cd","tutorial"]},prevItem:{title:"Bypassing Terraform error: \u201cThe true and false result expressions must have consistent types\u201d",permalink:"/blog/tech/terraform-ternary-error"}},p={authorsImageUrls:[void 0]},u=[{value:"Migrating Your Repo",id:"migrating-your-repo",level:2},{value:"Confirm",id:"confirm",level:3},{value:"Clean up",id:"clean-up",level:3},{value:"Rewiring your Amplify Pipeline",id:"rewiring-your-amplify-pipeline",level:2},{value:"Run  the <code>update-app</code> command",id:"run--the-update-app-command",level:3},{value:"Re-authenticate your Amplify app",id:"re-authenticate-your-amplify-app",level:3},{value:"The Webhook Approach",id:"the-webhook-approach",level:3},{value:"Caveats of the Webhook Approach",id:"caveats-of-the-webhook-approach",level:3}],s={toc:u},c="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This tutorial includes guidance for three different scenarios in your GitHub administration:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"when your repo is in your personal account;"),(0,i.kt)("li",{parentName:"ol"},"when your app is under a GitHub Org and admins grant you the permissions you need; and"),(0,i.kt)("li",{parentName:"ol"},"when your repo is under a GitHub Org and admins do NOT grant you the permissions you need.")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Pre-requisites: Relevant access and permissions for CodeCommit and Amplify. You also need a working GitHub account.")),(0,i.kt)("h2",{id:"migrating-your-repo"},"Migrating Your Repo"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open your CLI and cd into your existing CodeCommit local folder."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"git remote get-url origin")," to get the external clone URL for the project you plan to migrate to GitHub."),(0,i.kt)("li",{parentName:"ol"},"Create a temporary folder by running ",(0,i.kt)("inlineCode",{parentName:"li"},"mkdir ../temp-migration")," and open it in the CLI by running ",(0,i.kt)("inlineCode",{parentName:"li"},"cd ../temp-migration"),"."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone --bare")," followed by the clone URL you got in step 2. An example would be ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone --bare <https://git-codecommit.eu-west-1.amazonaws.com/v1/repos/name-of-your-codecommit-directory>"),".")),(0,i.kt)("br",null),(0,i.kt)("admonition",{title:"Educational note",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--bare")," is a way to fully clone your repo while cutting all its ties with the remote (in CodeCommit, in this case). You still get all your branches, tags and everything, but the cloned repo is completely independent from the remote.")),(0,i.kt)("br",null),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Create a new GitHub repo. To prevent issues, don\u2019t add any README, .gitignore or anything. After you click \u201cCreate repo\u201d, the only thing you should do is to copy the external clone URL as shown below. Don\u2019t run any git init, fist commit or anything. Just copy the relevant path as shown below.")),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Git clone SSH",src:o(2563).Z,width:"1400",height:"508"})),(0,i.kt)("br",null),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"Back to your terminal, cd into your bare git repo by running ",(0,i.kt)("inlineCode",{parentName:"li"},"cd name-of-your-codecommit-directory.git")," and run ",(0,i.kt)("inlineCode",{parentName:"li"},"git push --mirror")," followed by the clone path you got in step 5. In my case, it will be ",(0,i.kt)("inlineCode",{parentName:"li"},"git push --mirror <https://github.com/my-username/my-project.git>"),".")),(0,i.kt)("p",null,"That\u2019s it, migration is complete now."),(0,i.kt)("h3",{id:"confirm"},"Confirm"),(0,i.kt)("p",null,"To confirm all went well, go back to GitHub and refresh the page. You\u2019ll see that your repo will be there as expected, including all your commit history, branches and everything. To start working on your migrated GitHub repo, simply clone it and get on with business as usual :)"),(0,i.kt)("h3",{id:"clean-up"},"Clean up"),(0,i.kt)("p",null,"If you followed the instructions strictly, now it\u2019s time to delete your temporary folder. Go back to your terminal and run ",(0,i.kt)("inlineCode",{parentName:"p"},"cd ../.. and rm -rf temp-migration"),". If you used your OS\u2019s tmp folder instead, skip this step."),(0,i.kt)("h2",{id:"rewiring-your-amplify-pipeline"},"Rewiring your Amplify Pipeline"),(0,i.kt)("p",null,"Now that you migrated the code to GitHub, how do you leverage your already existing Amplify pipeline that was linked to the CodeCommit repo?"),(0,i.kt)("h3",{id:"run--the-update-app-command"},"Run  the ",(0,i.kt)("inlineCode",{parentName:"h3"},"update-app")," command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"AWS_PROFILE=YOUR_PROFILE AWS_DEFAULT_REGION=YOUR_REGION aws amplify update-app --app-id AMPLIFY_APP_ID --repository REPOSITORY_URL --access-token ACCESS_TOKEN\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"AMPLIFY_APP_ID"),": To find your app id, go to the Amplify console. Under App settings, click General and look for the App ARN. The app id should be the alphanumeric string at the very end of the ARN. You can find it in your Amplify console: App settings > General. The id is shown as \u201cREDACTED\u201d in the screenshot below:"),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Amplify App Id",src:o(9314).Z,width:"1400",height:"459"})),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"REPOSITORY_URL"),": It\u2019s the one you got in the step 5 of the migration.\n",(0,i.kt)("inlineCode",{parentName:"p"},"ACCESS_TOKEN"),": The access token is s a Personal Access Token that you can generate in GitHub. Beware that this token has to be generated by the GitHub repo owner."),(0,i.kt)("h3",{id:"re-authenticate-your-amplify-app"},"Re-authenticate your Amplify app"),(0,i.kt)("admonition",{title:"Real life XP",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Companies can be very strict about the GitHub Apps they approve. If you get blocked because your admins, for whatever reason, won't approve the Amplify App, jump to the section ",(0,i.kt)("a",{parentName:"p",href:"#the-webhook-approach"},'"The Webhook Approach"'),".")),(0,i.kt)("p",null,"Now you can reconnect your app. In the same page you got your ARN, if you look above the ARN you\u2019ll find a button \u201cReconnect repository\u201d. When you click it, you\u2019ll be directed to the Oath flow in GitHub."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"If the migrated repo is NOT under an Organization"),", you can click the \u201cAuthorize aws-amplify-console\u201d button. You\u2019ll be redirected to the Amplify console, and once there, click again the reconnect repository, select the relevant repo and off you go! Enjoy!"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"If the migrated repo is under your Organization"),", you can request the OAuth permission to the Amplify App by clicking a button. It will show a request pending message until your admin approves it (you\u2019ll receive an email when they do).")),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Authorize Amplify Github App",src:o(9702).Z,width:"1186",height:"1206"})),(0,i.kt)("br",null),(0,i.kt)("p",null,"Once Oauth is granted, go back to your Amplify app and click Reconnect repository again. You'll be shown repos both from your org and from your own account to choose from. Select the relevant one and have fun with your new migrated repos!"),(0,i.kt)("h3",{id:"the-webhook-approach"},"The Webhook Approach"),(0,i.kt)("p",null,"An alternative to using the Amplify GitHub App is to create an incoming webhook in Amplify instead.\nTo do that, under App settings, select Build settings nd click Create Webhook (both shown in orange below)."),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Amplify Build Settings",src:o(8359).Z,width:"1181",height:"295"})),(0,i.kt)("br",null),(0,i.kt)("p",null,"In the pop-up, type in a name and select a branch to build. Your new webhook will show in the Amplify interface. Copy its URL, we\u2019ll use it in GitHub."),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Amplify Incming Webhooks",src:o(135).Z,width:"769",height:"234"})),(0,i.kt)("br",null),(0,i.kt)("p",null,"Now go back to your migrated GitHub repo, select Settings > Webhooks and click the button Add webhook."),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Adding GitHub Webhooks",src:o(3731).Z,width:"1264",height:"868"})),(0,i.kt)("p",null,"Workaround completed."),(0,i.kt)("h3",{id:"caveats-of-the-webhook-approach"},"Caveats of the Webhook Approach"),(0,i.kt)("p",null,"If you go down the webhook path, be mindful that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you need to connect multiple branches to Amplify, you need to create a webhook in Amplify to each of them, and add each to GitHub, one by one. If you feel tempted to automate it, have a chat to your GitHub Org admin to clear up how the OAuth permission for the Amplify App can be done. Automation in this end is an overkill and waste of time."),(0,i.kt)("li",{parentName:"ul"},"Any git push will trigger the webhook in every single frontend deployment in your Amplify. In other words, if you have the branches \u201cmain\u201d, \u201crelease\u201d, \u201cdev\u201d, \u201cfeature/a\u201d, and \u201cfeature/b\u201d, every time your colleague pushes his changes in \u201cfeature/b\u201d to GitHub, the pipeline will be triggered for all the five branches.")),(0,i.kt)("p",null,"Hope this was helpful, see you!"))}m.isMDXComponent=!0},8359:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/amplify_build_settings-937fb3f3220996941f487bd5ed440afe.webp"},9314:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/amplify_data-ed02eb0516b95e7d3782a0b619920733.webp"},135:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/amplify_incoming_webhooks-e4c6bd369f275c88df521b33d531b072.webp"},9702:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/authorize_amplify_app-0c09d0e0746dd8ee0e5bf2f70539c74a.webp"},2563:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/clone_ssh-5be730cf4d2ec7e3548855fc55af9e16.webp"},3731:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/github_webhooks-143154a73be16465c0004e7d5de274d3.webp"}}]);