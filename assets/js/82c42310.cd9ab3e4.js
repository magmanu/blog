"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5626],{3563:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=s(4848),r=s(8453);const a={slug:"github-actions-data-flow",title:"GitHub Actions: Data Flow & Data Persistence",authors:"manu",tags:["github actions","ci/cd","pipeline","env","outputs","artefacts","cache"]},i=void 0,l={permalink:"/blog/tech/github-actions-data-flow",source:"@site/tech/2023-10-31-github-actions-data-flow/index.md",title:"GitHub Actions: Data Flow & Data Persistence",description:"In Github Actions, by default, data is not inherently persistent or available to the whole pipeline. Every step has is its own process, every job has its own runner. By default, whatever data emerges in a job, ends with it.",date:"2023-10-31T00:00:00.000Z",tags:[{label:"github actions",permalink:"/blog/tech/tags/github-actions"},{label:"ci/cd",permalink:"/blog/tech/tags/ci-cd"},{label:"pipeline",permalink:"/blog/tech/tags/pipeline"},{label:"env",permalink:"/blog/tech/tags/env"},{label:"outputs",permalink:"/blog/tech/tags/outputs"},{label:"artefacts",permalink:"/blog/tech/tags/artefacts"},{label:"cache",permalink:"/blog/tech/tags/cache"}],readingTime:9.54,hasTruncateMarker:!0,authors:[{name:"Manu Magalh\xe3es",title:"DevSecOps Engineer",url:"https://github.com/magmanu",imageURL:"https://github.com/magmanu.png",key:"manu"}],frontMatter:{slug:"github-actions-data-flow",title:"GitHub Actions: Data Flow & Data Persistence",authors:"manu",tags:["github actions","ci/cd","pipeline","env","outputs","artefacts","cache"]},unlisted:!1,nextItem:{title:"Generating Dynamic JSON in Terraform",permalink:"/blog/tech/dynamic-json-in-terraform"}},o={authorsImageUrls:[void 0]},c=[];function d(e){const t={a:"a",br:"br",code:"code",em:"em",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"In Github Actions, by default, data is not inherently persistent or available to the whole pipeline. Every step has is its own process, every job has its own runner. By default, whatever data emerges in a job, ends with it."}),"\n",(0,n.jsx)(t.p,{children:"How do we pass data from one process to the other, or save it for the next process?"}),"\n",(0,n.jsx)(t.p,{children:"A short sweet answer:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Strategy"}),(0,n.jsx)(t.th,{children:"Data"}),(0,n.jsx)(t.th,{children:"Scope"}),(0,n.jsx)(t.th,{children:"Persistence"}),(0,n.jsx)(t.th,{children:"Explanation"}),(0,n.jsx)(t.th,{children:"Example"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"env"})}),(0,n.jsx)(t.td,{children:"Values"}),(0,n.jsx)(t.td,{children:"Job (internal)"}),(0,n.jsx)(t.td,{children:"Ephemeral"}),(0,n.jsxs)(t.td,{children:["Propagates ",(0,n.jsx)(t.em,{children:"data"})," ",(0,n.jsx)("br",{})," between ",(0,n.jsx)(t.em,{children:"steps"})," ",(0,n.jsx)("br",{}),"  in the same ",(0,n.jsx)(t.em,{children:"job"})]}),(0,n.jsx)(t.td,{children:"Pass a boolean to control whether the next step should run"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"outputs"})}),(0,n.jsx)(t.td,{children:"Values"}),(0,n.jsx)(t.td,{children:"Workflow (internal)"}),(0,n.jsx)(t.td,{children:"Ephemeral"}),(0,n.jsxs)(t.td,{children:["Propagates ",(0,n.jsx)(t.em,{children:"data"})," ",(0,n.jsx)("br",{})," between ",(0,n.jsx)(t.em,{children:"jobs/steps"})," ",(0,n.jsx)("br",{}),"  in the same ",(0,n.jsx)(t.em,{children:"workflow"})]}),(0,n.jsx)(t.td,{children:"Pass a deployment id to the next job"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"artefacts"}),(0,n.jsx)(t.td,{children:"Files"}),(0,n.jsx)(t.td,{children:"Workflow (internal & external)"}),(0,n.jsx)(t.td,{children:"Persistent"}),(0,n.jsxs)(t.td,{children:["Propagates ",(0,n.jsx)(t.em,{children:"files"})," ",(0,n.jsx)("br",{})," between ",(0,n.jsx)(t.em,{children:"jobs/workflows"})]}),(0,n.jsxs)(t.td,{children:["Pass the project build to different test jobs running in parallel  ",(0,n.jsx)("br",{}),(0,n.jsx)("br",{})," ",(0,n.jsx)(t.em,{children:"Intended for frequently changing data. Files are available for download after the workflow finishes."})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cache"}),(0,n.jsx)(t.td,{children:"Files"}),(0,n.jsx)(t.td,{children:"Workflow (internal & external)"}),(0,n.jsx)(t.td,{children:"Persistent"}),(0,n.jsxs)(t.td,{children:["Propagates ",(0,n.jsx)(t.em,{children:"files"})," ",(0,n.jsx)("br",{})," inside and between ",(0,n.jsx)(t.em,{children:"workflows"})," ",(0,n.jsx)("br",{}),"  in the same ",(0,n.jsx)(t.em,{children:"repository"})]}),(0,n.jsxs)(t.td,{children:["Cache npm packages for use in different workflow runs. ",(0,n.jsx)("br",{}),(0,n.jsx)("br",{})," ",(0,n.jsx)(t.em,{children:"Intended for files that don't change much."})]})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["For a completer answer: read on.",(0,n.jsx)(t.br,{}),"\n","All the workflow examples in this article ",(0,n.jsx)(t.a,{href:"https://github.com/magmanu/blog/tree/main/demos/github-actions-data-flow",children:"can be found as files here"}),", along with a copy of the respective redacted logs."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var n=s(6540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);