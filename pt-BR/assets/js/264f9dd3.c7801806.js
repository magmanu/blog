"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8373],{8800:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var r=a(4848),n=a(8453);const s={slug:"terraform-ternary-error",title:"Solu\xe7\xe3o: Terraform n\xe3o deixa tern\xe1rios terem tipos diferentes",authors:"manu",tags:["infra","terraform","gambiarra","devops"]},t=void 0,i={permalink:"/blog/pt-BR/tech/terraform-ternary-error",source:"@site/i18n/pt-BR/docusaurus-plugin-content-blog-tech/2023-03-18-terraform-ternary-errors/index.md",title:"Solu\xe7\xe3o: Terraform n\xe3o deixa tern\xe1rios terem tipos diferentes",description:"Voc\xea j\xe1 encontrou esse erro no Terraform, quando o que voc\xea queria era exatamente ter tipos diferentes no resultado do tern\xe1rio?",date:"2023-03-18T00:00:00.000Z",tags:[{label:"infra",permalink:"/blog/pt-BR/tech/tags/infra"},{label:"terraform",permalink:"/blog/pt-BR/tech/tags/terraform"},{label:"gambiarra",permalink:"/blog/pt-BR/tech/tags/gambiarra"},{label:"devops",permalink:"/blog/pt-BR/tech/tags/devops"}],readingTime:2.65,hasTruncateMarker:!0,authors:[{name:"Manu Magalh\xe3es",title:"Engenheira de DevSecOps",url:"https://github.com/magmanu",imageURL:"https://github.com/magmanu.png",key:"manu"}],frontMatter:{slug:"terraform-ternary-error",title:"Solu\xe7\xe3o: Terraform n\xe3o deixa tern\xe1rios terem tipos diferentes",authors:"manu",tags:["infra","terraform","gambiarra","devops"]},unlisted:!1,prevItem:{title:"Como Gerar JSON Din\xe2mico no Terraform",permalink:"/blog/pt-BR/tech/dynamic-json-in-terraform"},nextItem:{title:"Como Migrar do CodeCommit para o GitHub \u2014 Mantendo sua pipeline Amplify",permalink:"/blog/pt-BR/tech/migrate-codecommit-to-github"}},l={authorsImageUrls:[void 0]},m=[{value:"Exemplo simples",id:"exemplo-simples",level:2},{value:"Pera, como \xe9 que \xe9?",id:"pera-como-\xe9-que-\xe9",level:3},{value:"Um exemplo menos simples",id:"um-exemplo-menos-simples",level:2}];function c(e){const o={blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.p,{children:"Voc\xea j\xe1 encontrou esse erro no Terraform, quando o que voc\xea queria era exatamente ter tipos diferentes no resultado do tern\xe1rio?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:["The true and false result expressions must have consistent types",(0,r.jsx)(o.br,{}),"\n",(0,r.jsx)(o.em,{children:"Express\xf5es com resultado true ou false devem ter tipos consistentes"})]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Vou dar dois exemplos de como contornar esse problema, mas a regra geral \xe9 esta aqui:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-hcl",children:"atributo = [\n    <valor caso true>, \n    <valor caso false>\n    ][<condicional> ? 0 : 1]\n"})}),"\n",(0,r.jsx)(o.h2,{id:"exemplo-simples",children:"Exemplo simples"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-hcl",children:'locals {\n    valor_dinamico = [\n      {"regiao": "${var.regiao}"}, \n      "indispon\xedvel"\n      ][var.regiao == "eu-west-1" ? 0 : 1 ]\n}\n'})}),"\n",(0,r.jsxs)(o.p,{children:["No exemplo acima, ",(0,r.jsx)(o.code,{children:"local.valor_dinamico"})," vai ser avaliado como ",(0,r.jsx)(o.code,{children:'{"regiao: "eu-west-1"}'}),", que \xe9 um ",(0,r.jsx)(o.code,{children:"objeto"}),", se a regi\xe3o da AWS for a Irlanda; e retorna ",(0,r.jsx)(o.code,{children:'"indispon\xedvel"'}),", que \xe9 uma ",(0,r.jsx)(o.code,{children:"string"}),", se for alguma outra regi\xe3o."]}),"\n",(0,r.jsx)(o.h3,{id:"pera-como-\xe9-que-\xe9",children:"Pera, como \xe9 que \xe9?"}),"\n",(0,r.jsx)(o.p,{children:"Em vez de usar o tern\xe1rio da maneira tradicional, n\xf3s usamos uma tupla (tamb\xe9m conhecida como lista com tipos mistos) e aproveitamos a estrutura do tern\xe1rio para avaliar qual \xedndice cont\xe9m o valor de que precisamos."}),"\n",(0,r.jsxs)(o.p,{children:["No fundo, estamos selecionando se queremos o primeiro ou segundo valor que est\xe1 na tupla, como se fosse  ",(0,r.jsx)(o.code,{children:"tupla[0]"})," ou ",(0,r.jsx)(o.code,{children:"tupla[1]"}),"."]}),"\n",(0,r.jsx)(o.p,{children:"Obrigada Mariux pelo truque."}),"\n",(0,r.jsx)(o.h2,{id:"um-exemplo-menos-simples",children:"Um exemplo menos simples"}),"\n",(0,r.jsx)(o.p,{children:"Tamb\xe9m d\xe1 pra fazer coisas mais complexas e din\xe2micas. N\xe3o estou dizendo fica bonito ou que seja recomend\xe1vel, mas \xe0s vezes a gente faz o que tem que ser feito."}),"\n",(0,r.jsx)(o.p,{children:"No meu caso, a l\xf3gica tern\xe1ria que eu precisava era usada em uma Step Function. Eu tinha um objeto, e se esse objeto tivesse s\xf3 uma chave (key), eu precisava de um JSON. Se o objeto tivesse mais do que uma chave, eu precisava de um JSON diferente."}),"\n",(0,r.jsx)(o.p,{children:"A coisa fica meio feia porque tem l\xf3gica em tudo quanto \xe9 lugar, mas aqui vai o resultado:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-hcl",children:'variable "ssm_params" {\n    description = "Par\xe2metro exigido pelo SSM Documents para ativar rota\xe7\xe3o de chaves KMS"\n    default     = [{"KeyId": "States.Array($.KeyId)",\n                    "AutomationAssumeRole": "States.Array($.AutomationAssumeRole)"}]\n}\n\nlocals {\n  choices = [for item in var.ssm_params: [\n    # valor caso true \n    merge(flatten([\n      for key, value in item: {\n        "IsPresent": true,\n        "Next": "SSM-${key}",\n        "Variable": "$.${key}"\n      }\n    ])...), \n    #\xa0valor caso false\n    merge([\n      { "And" : [\n          for key, value in item: \n            {\n              "IsPresent": true,\n              "Variable": "$.${key}"\n            }\n        ],\n      "Next": "SSM-${join("", sort([keys(item)]...))}"\n      }\n    ]...)\n    ][\n      # condicional\n      length(flatten([keys(item)])) == 1 ? 0 : 1\n      ]\n  ]\n}\n'})}),"\n",(0,r.jsxs)(o.p,{children:["Minha tupla tem dois valores, os dois come\xe7am com ",(0,r.jsx)(o.code,{children:"merge"})," e resultam em um array de objetos com valores gerados dinamicamente. E como d\xe1 pra ver, a estrutura dos objetos \xe9 diferente em cada caso, e \xe9 por isso que a solu\xe7\xe3o padr\xe3o para tern\xe1rios n\xe3o funciona."]}),"\n",(0,r.jsxs)(o.p,{children:["A seguir, a parte do condicional tamb\xe9m \xe9 din\xe2mica. A gente extrai as chaves do objeto, coloca as chaves em um \xfanico array usando ",(0,r.jsx)(o.code,{children:"flatten"})," e avalia o tamanho do array. Se s\xf3 houver um elemento, o resultado final ser\xe1 o primeiro valor da tupla. Caso contr\xe1rio, o resultado final ser\xe1 o segundo valor da tupla."]}),"\n",(0,r.jsxs)(o.p,{children:["N\xe3o me pergunte como eu n\xe3o joguei o computador pela janela, mas funcionou. S\xf3 que eu nunca mais quero fazer uma coisa dessas. Se uma linguagem \xe9 declarativa n\xe3o era pra ter l\xf3gica complexa, n\xe9. Enfim. ",":P"]})]})}function u(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,o,a)=>{a.d(o,{R:()=>t,x:()=>i});var r=a(6540);const n={},s=r.createContext(n);function t(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),r.createElement(s.Provider,{value:o},e.children)}}}]);