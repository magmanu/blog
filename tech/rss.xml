<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Code, Cloud, App Security and more</title>
        <link>https://magmanu.github.io/blog/tech</link>
        <description>A Journey in Tech</description>
        <lastBuildDate>Tue, 31 Oct 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[GitHub Actions: Data Flow & Data Persistence]]></title>
            <link>https://magmanu.github.io/blog/tech/github-actions-data-flow</link>
            <guid>https://magmanu.github.io/blog/tech/github-actions-data-flow</guid>
            <pubDate>Tue, 31 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In Github Actions, by default, data is not inherently persistent or available to the whole pipeline. Every step has is its own process, every job has its own runner. By default, whatever data emerges in a job, ends with it.]]></description>
            <content:encoded><![CDATA[<p>In Github Actions, by default, data is not inherently persistent or available to the whole pipeline. Every step has is its own process, every job has its own runner. By default, whatever data emerges in a job, ends with it.</p><p>How do we pass data from one process to the other, or save it for the next process?</p><p>A short sweet answer:</p><table><thead><tr><th>Strategy</th><th>Data</th><th>Scope</th><th>Persistence</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td><code>env</code></td><td>Values</td><td>Job (internal)</td><td>Ephemeral</td><td>Propagates <em>data</em> <br> between <em>steps</em> <br>  in the same <em>job</em></td><td>Pass a boolean to control whether the next step should run</td></tr><tr><td><code>outputs</code></td><td>Values</td><td>Workflow (internal)</td><td>Ephemeral</td><td>Propagates <em>data</em> <br> between <em>jobs/steps</em> <br>  in the same <em>workflow</em></td><td>Pass a deployment id to the next job</td></tr><tr><td>artefacts</td><td>Files</td><td>Workflow (internal &amp; external)</td><td>Persistent</td><td>Propagates <em>files</em> <br> between <em>jobs/workflows</em></td><td>Pass the project build to different test jobs running in parallel  <br><br> <em>Intended for frequently changing data. Files are available for download after the workflow finishes.</em></td></tr><tr><td>cache</td><td>Files</td><td>Workflow (internal &amp; external)</td><td>Persistent</td><td>Propagates <em>files</em> <br> inside and between <em>workflows</em> <br>  in the same <em>repository</em></td><td>Cache npm packages for use in different workflow runs. <br><br> <em>Intended for files that don't change much.</em></td></tr></tbody></table><p>For a completer answer: read on.<br>
<!-- -->All the workflow examples in this article <a href="https://github.com/magmanu/blog/tree/main/demos/github-actions-data-flow" target="_blank" rel="noopener noreferrer">can be found as files here</a>, along with a copy of the respective redacted logs.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="using-env">Using <code>env</code><a href="#using-env" class="hash-link" aria-label="Direct link to using-env" title="Direct link to using-env">‚Äã</a></h2><p>It's pretty simple to create a data flow between steps: define a key-value pair and write it to the <code>GITHUB_ENV</code> environment file, using the appropriate syntax for your shell. See examples below in bash and python:</p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Show code</summary><div><div class="collapsibleContent_i85q"><div><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/.github/workflows/using_env.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Two ways to set environment variable with sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># Warning: in this step, the input is not sanitized or validated</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">shell</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          # No print to the logs.</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          random_wiki_article_1=$(curl -L -X GET "https://en.wikipedia.org/api/rest_v1/page/random/summary" | jq .title)</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "$random_wiki_article_1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "ARTICLE_1=$random_wiki_article_1" &gt;&gt; "$GITHUB_ENV"</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          # üêâ Print the variable in the logs: only for non-senstive data!</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          random_wiki_article_2=$(curl -L -X GET "https://en.wikipedia.org/api/rest_v1/page/random/summary" | jq .title)</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "ARTICLE_2=$random_wiki_article_2" | tee -a "$GITHUB_ENV"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Set environment variable with python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">shell</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># if using "write", use \n when creating multiple vars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># with "print", you can omit \n</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          from os import environ as env</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          with open(env.get('GITHUB_ENV', None), 'a') as ghenv:</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            ghenv.write("SUBJECT=Sun\n")</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            print("STATE=radiant", file=ghenv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            print("TIME=today", file=ghenv)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> üõ°Ô∏è Retrieving values securely</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># observe that ARTICLE_1 was not sanitized or validated, so it's vulnerable to injection attacks.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># The approach below prevents the issue by setting env.ARTICLE_1 as an argument to the script.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># It also gives you the chance to rename the variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">WHO</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> env.SUBJECT </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">WHAT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> env.ARTICLE_1 </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">WHEN</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> env.TIME </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "$WHO read about $WHAT $WHEN."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> üêâ Retrieving values in a potentially vulnerable way</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># This approach is vulnerable to injection attacks!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># Only use it if you have control over the input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">shell</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "${{ env.SUBJECT }} is ${{ env.STATE }} ${{ env.TIME }}."</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div></details><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debugging-tip">Debugging tip<a href="#debugging-tip" class="hash-link" aria-label="Direct link to Debugging tip" title="Direct link to Debugging tip">‚Äã</a></h4><p>To list all the environment variables available in a job, add this tiny step:</p><p><code>- run: env</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="using-outputs">Using <code>outputs</code><a href="#using-outputs" class="hash-link" aria-label="Direct link to using-outputs" title="Direct link to using-outputs">‚Äã</a></h2><p>Outputs are available to all steps in the same job, and to any subsequent job that <code>needs</code> it.<br>
<!-- -->The output is always an unicode <strong>string</strong>.  </p><p>And obviously, jobs that depend on an <code>output</code> will not run in parallel with the job that produces the output.</p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Show code</summary><div><div class="collapsibleContent_i85q"><div><p>For simplicity, I show how to set the output in bash, but you can use any shell of your choice.  </p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/.github/workflows/outputs-for-different-job.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">jobs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">setting-outputs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">outputs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Required: name the output in the job level so it's available to other jobs</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">person_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> steps.use</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hardcoded</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value.outputs.NAME </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">location</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> steps.use</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dynamic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value.outputs.LOCATION </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> use</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hardcoded</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "NAME=Marcela" &gt;&gt; "$GITHUB_OUTPUT"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> use</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dynamic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># note the use of jq -c to get the value as a single line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          location=$(curl -H "Accept: application/json" https://randomuser.me/api/ | jq -c .results[].location)</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "LOCATION=$location" &gt; "$GITHUB_OUTPUT"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">retrieving-outputs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">needs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> setting</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">outputs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Greet to location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          COUNTRY=$(echo $GEODATA | jq -r . | jq .country)</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "Hello $NAME, welcome to $COUNTRY!"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">NAME</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">needs.setting</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">outputs.outputs.person_name</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">GEODATA</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> needs.setting</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">outputs.outputs.location </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div></details><p>Even though it's recommended to use <code>env</code> to pass data between steps, <code>outputs</code> can be used for that purpose as well. This is useful when a value is required both in the current job and in subsequent jobs.  </p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Show code</summary><div><div class="collapsibleContent_i85q"><div><p>The previous example showed how to use outputs in different jobs.<br>
<!-- -->To use an output the same job, simply add the code in the highlighted section.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/.github/workflows/outputs-for-same-job.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">jobs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">extract</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">outputs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">person_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> steps.generate</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hardcoded</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value.outputs.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">location</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> steps.enerate</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dynamic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value.outputs.location </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> generate</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hardcoded</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "NAME=Marcela" &gt;&gt; "$GITHUB_OUTPUT"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> generate</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dynamic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          location=$(curl -H "Accept: application/json" https://randomuser.me/api/ | jq .results[].location | jq @json) </span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "LOCATION=$location" &gt;&gt; "$GITHUB_OUTPUT"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Consume output in same job</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "$PERSON, you're in $GEODATA, so we've updated your timezone to GMT$OFFSET."</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">PERSON</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> steps.use</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hardcoded</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value.outputs.NAME </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic"># use fromJSON() when filtering the output value at the env level</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic"># See more about object filtering in </span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic"># https://docs.github.com/en/actions/learn-github-actions/expressions#object-filters</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">GEODATA</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> fromJSON(steps.use</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dynamic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value.outputs.LOCATION).country </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">OFFSET</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> fromJSON(steps.use</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dynamic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">value.outputs.LOCATION).timezone.offset </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    (</span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div></details><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Helpful debugging info</div><div class="admonitionContent_S0QG"><ul><li>An individual output should be 1MB max. </li><li>All outputs combined should not exceed 50MB.</li></ul></div></div><br><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Real life XP</div><div class="admonitionContent_S0QG"><p><code>GITHUB_OUTPUT</code> expects a one-line string.<br>
<!-- -->If you need a multiline output, assign it to a variable and write to the output as follows:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PAYLOAD_NAME&lt;&lt;EOF"</span><span class="token string" style="color:#e3116c">$'</span><span class="token string entity" style="color:#36acaa">\n</span><span class="token string" style="color:#e3116c">'</span><span class="token plain">"</span><span class="token variable" style="color:#36acaa">$payload_var</span><span class="token string" style="color:#e3116c">"$'</span><span class="token string entity" style="color:#36acaa">\n</span><span class="token string" style="color:#e3116c">'EOF &gt;&gt; "</span><span class="token variable" style="color:#36acaa">$GITHUB_OUTPUT</span><span class="token plain">".</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="using-artefacts">Using artefacts<a href="#using-artefacts" class="hash-link" aria-label="Direct link to Using artefacts" title="Direct link to Using artefacts">‚Äã</a></h2><p>From the docs: "<em>Use artefacts when you want to save files produced by a job to view after a workflow run has ended, such as built binaries or build logs</em>."</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="uploading-artefacts">Uploading artefacts<a href="#uploading-artefacts" class="hash-link" aria-label="Direct link to Uploading artefacts" title="Direct link to Uploading artefacts">‚Äã</a></h3><p>You can:</p><ul><li>select one or multiple files to be bundled as an artifact.  </li><li>use wildcards, multiple paths and exclusion patterns in the usual GitHub Actions syntax.  </li><li>set a retention period for the artefact.</li></ul><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/.github/workflows/handle-artefacts.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">jobs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">upload</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Checkout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/checkout@v4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Upload log files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/upload</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">artifact@v4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> all</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">logs      </span><span class="token comment" style="color:#999988;font-style:italic"># artefact name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">             </span><span class="token comment" style="color:#999988;font-style:italic"># path to files to be included in the artifact.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token important">**/log*.txt</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic"># relative paths are rooted against $GITHUB_WORKSPACE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">retention-days</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">if-no-files-found</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> error </span><span class="token comment" style="color:#999988;font-style:italic"># force step to fail if the content for the artefact is not found</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that maximum retention period <a href="https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#artifact-and-log-retention-policy" target="_blank" rel="noopener noreferrer">can be defined at repo, organisation, or enterprise level</a>. There's a max of 90 days for public repos and 400 days for private repos. If you lower the retention period, you'll have more non-billed space ;) </p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="downloading-artefacts">Downloading artefacts<a href="#downloading-artefacts" class="hash-link" aria-label="Direct link to Downloading artefacts" title="Direct link to Downloading artefacts">‚Äã</a></h3><p>To retrieve the artefact, you can use:</p><ul><li>the <a href="https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts" target="_blank" rel="noopener noreferrer">Github UI</a></li><li>the <a href="https://docs.github.com/en/rest/actions/artifacts?apiVersion=2022-11-28#download-an-artifact" target="_blank" rel="noopener noreferrer">Github API</a></li><li>the <a href="https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts?tool=cli" target="_blank" rel="noopener noreferrer"><code>gh</code> cli</a></li><li>the official <a href="https://github.com/marketplace/actions/download-a-build-artifact" target="_blank" rel="noopener noreferrer"><code>actions/download-artifact</code></a> action, if you need to retrieve artifacts programmatically. From <code>v4</code>, the action allows you to download artefacts from a different workflows or repos, as long as you provide a token. (üõ°Ô∏è: it's recommended to use a GitHub App rather than a PAT for professional projects.)</li></ul><p>Let's see how to retrieve the artefact we created in the previous example using <code>actions/download-artifact</code>:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/.github/workflows/handle-artefacts.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">download</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">needs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> upload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Download log files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> download</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">artifacts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/download</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">artifact@v4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> all</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">logs  </span><span class="token comment" style="color:#999988;font-style:italic"># note it uses the name defined in the upload step</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pass artifact path to python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">shell</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          import os</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          from glob import glob</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          artifact_path = os.environ.get("ARTIFACT_PATH", "")</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          glob_list = glob(artifact_path + "/*.txt")</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          for filename in glob_list:</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">              with open(filename, "r", encoding="UTF-8") as f:</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                  content = f.read()</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">                  print(content)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ARTIFACT_PATH</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> steps.download</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">artifacts.outputs.download</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">path </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>All the zipping and unzipping of the artifacts is automatically handled by the actions.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deleting-artefacts">Deleting artefacts<a href="#deleting-artefacts" class="hash-link" aria-label="Direct link to Deleting artefacts" title="Direct link to Deleting artefacts">‚Äã</a></h3><p>To delete an artefact, you can:</p><ul><li>use the <a href="https://docs.github.com/en/actions/managing-workflow-runs/removing-workflow-artifacts" target="_blank" rel="noopener noreferrer">Github UI</a></li><li>use the <a href="https://docs.github.com/en/rest/reference/actions#delete-an-artifact" target="_blank" rel="noopener noreferrer">Github API</a></li><li>write a <a href="https://gist.github.com/qwe321qwe321qwe321/efae4569576006624c34f23b2dd76a58" target="_blank" rel="noopener noreferrer">custom script using the Github API</a> or using a <a href="https://github.com/GeekyEggo/delete-artifact" target="_blank" rel="noopener noreferrer">community action</a>.</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="using-cache">Using cache<a href="#using-cache" class="hash-link" aria-label="Direct link to Using cache" title="Direct link to Using cache">‚Äã</a></h2><div class="theme-admonition theme-admonition-danger alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>üêâ Security warning</div><div class="admonitionContent_S0QG"><p>Do not store sensitive information in the cache (beware of configuration files containing secrets), as the cache is accessible to anyone who can create a PR on the repository, even on forks.</p></div></div><p>When we're handling data that is pretty stable and repeatedly used (like dependencies), we can do better than re-generating them every time: we can cache them for better performance.</p><p>In the example below, we're caching the <code>pip</code> dependencies for a Python project. Note that we have added the cache step before the pip install step. The idea is that the install will only happen if the cache is not good or available: </p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/.github/workflows/cache.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">jobs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">cache</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/checkout@v4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/setup</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">python@v5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">python-version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3.12'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">cache</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'pip'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">cache-dependency-path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">            **/requirements.txt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Get pip cache dir</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pip</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">          echo "dir=$(pip cache dir)" &gt;&gt; $GITHUB_OUTPUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Handle cache for Python dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/cache@v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        The cache action requires a `path` to the cache and a `key`. The `key` is used to retrieve the cache and to recreate it next time. </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic"># path: location of files to cache</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> steps.pip</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">cache.outputs.dir </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic"># key: unique id used to retrieve and recreate the cache</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> runner.os </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pip</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">$</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> hashFiles('</span><span class="token important">**/requirements.txt')</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Install dependencies if not found in cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">if</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> steps.cache.outputs.cache</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hit </span><span class="token tag" style="color:#00009f">!=</span><span class="token plain"> 'true'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pip install </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">r requirements.txt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="setting-the-cache">Setting the cache<a href="#setting-the-cache" class="hash-link" aria-label="Direct link to Setting the cache" title="Direct link to Setting the cache">‚Äã</a></h3><p>The first time the workflow runs, the cache is obviously empty. Therefore, the output <code>cache-hit</code> (native to the official <code>actions/cache</code> action), will return <code>false</code>, which in turn makes our workflow run the install step.<br>
<a href="https://raw.githubusercontent.com/magmanu/blog/main/demos/github-actions-data-flow/31_data_flow_cache_set-cache.txt" target="_blank" rel="noopener noreferrer"><em>Check logs</em></a></p><p>However, a small magic happens too: a post-cache step, automatically added by <code>action/cache</code> at the end of the job, will look at the keys your provided and add the files to the cache.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="retrieving-the-cache">Retrieving the cache<a href="#retrieving-the-cache" class="hash-link" aria-label="Direct link to Retrieving the cache" title="Direct link to Retrieving the cache">‚Äã</a></h3><p>As long as nothing has changed in your dependency manifest, the next time <code>actions/cache</code> runs for that path and key, the action will find a <code>cache-hit</code>and the workflow will safely skip the install step.<br>
<a href="https://raw.githubusercontent.com/magmanu/blog/main/demos/github-actions-data-flow/32_data_flow_cache_use-cache.txt" target="_blank" rel="noopener noreferrer"><em>Check logs</em></a></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="updating-the-cache">Updating the cache<a href="#updating-the-cache" class="hash-link" aria-label="Direct link to Updating the cache" title="Direct link to Updating the cache">‚Äã</a></h3><p>Have you noted the <code>hashFiles</code> function used in the <code>key</code> argument?<br>
<!-- -->This is a function provided by GitHub Actions that creates a unique hash value based on a file path. When the hash value doesn't match, it means that there was a change in the file - in our case, the dependency manifest.  </p><p>If the dependencies changed (even a single patch), the cache is no good anymore and the <code>cache-hit</code> output will allow <code>pip install</code> to run. And then we're back to square one: dependencies are installed and the cache is updated on a post-cache job.<br>
<a href="https://raw.githubusercontent.com/magmanu/blog/main/demos/github-actions-data-flow/33_data_flow_cache_update-cache.txt" target="_blank" rel="noopener noreferrer"><em>Check the logs</em></a></p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="last-notes-about-caching">Last notes about caching<a href="#last-notes-about-caching" class="hash-link" aria-label="Direct link to Last notes about caching" title="Direct link to Last notes about caching">‚Äã</a></h3><ul><li>If you‚Äôre using self-hosted runners, the option to self-store the cache is only available in Enterprise plans.</li><li>This action <code>actions/cache</code> manages the cache centrally. This means that the cache is available to (and updatable by) all jobs in the same repository - and even to other workflows.</li><li>Read more about <a href="https://github.com/actions/cache/blob/main/caching-strategies.md" target="_blank" rel="noopener noreferrer">caching strategies here</a>.</li></ul><p>That was a long post, phew.<br>
<!-- -->See you later!  :)</p>]]></content:encoded>
            <category>github actions</category>
            <category>ci/cd</category>
            <category>pipeline</category>
            <category>env</category>
            <category>outputs</category>
            <category>artefacts</category>
            <category>cache</category>
        </item>
        <item>
            <title><![CDATA[Generating Dynamic JSON in Terraform]]></title>
            <link>https://magmanu.github.io/blog/tech/dynamic-json-in-terraform</link>
            <guid>https://magmanu.github.io/blog/tech/dynamic-json-in-terraform</guid>
            <pubDate>Sat, 18 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In this article I‚Äôll use Step Functions as a case study, but you can do it with whatever resources you want.]]></description>
            <content:encoded><![CDATA[<p>In this article I‚Äôll use Step Functions as a case study, but you can do it with whatever resources you want.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="what-were-going-to-do">What we‚Äôre going to do<a href="#what-were-going-to-do" class="hash-link" aria-label="Direct link to What we‚Äôre going to do" title="Direct link to What we‚Äôre going to do">‚Äã</a></h2><p>The following JSON will become dynamic. We‚Äôll replace static values with:</p><ol><li><a href="#case-1-injecting-a-variable-into-json">A variable</a></li><li><a href="#case-2-injecting-a-list-into-a-json">A dynamic list</a></li><li><a href="#case-3-injecting-an-object-into-a-json">One or more dynamic objects</a></li></ol><p>(I‚Äôve added non idiomatic comments inside the code blocks, but it‚Äôs just to show what exactly we‚Äôre doing.)</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Reference json</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Comment"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"My state machine"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"StartAt"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"States"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Handle Notification"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:states:::lambda:invoke"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"OutputPath"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.Payload"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token property" style="color:#36acaa">"Payload.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              -----&gt; Case </span><span class="token number" style="color:#36acaa">1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Replace with dynamic string</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              </span><span class="token property" style="color:#36acaa">"FunctionName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"my_function_name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"End"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Choice"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          ----&gt; Case </span><span class="token number" style="color:#36acaa">2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Replace with dynamic list</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"Choices"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">             </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">                 </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">               </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                      </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">               </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SSM Execution-InstanceId"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">     </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">               </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.InstanceId"</span><span class="token plain">              </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">               </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">                </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">               </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                      </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">               </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SSM Execution-SecurityGroupIds"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">               </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.SecurityGroupIds"</span><span class="token plain">        </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">                </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Default"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        ----&gt; Case </span><span class="token number" style="color:#36acaa">3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Replace with one or more dynamic objects</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"SSM Execution-InstanceId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"DocumentName.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.DocumentName"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"InstanceId.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"States.Array($.InstanceId)"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:states:::aws-sdk:ssm:startAutomationExecution"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ResultPath"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.TaskResult"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"SSM Execution-SecurityGroupIds"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"DocumentName.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.DocumentName"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"SecurityGroupIds.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"States.Array($.SecurityGroupIds)"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:states:::aws-sdk:ssm:startAutomationExecution"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ResultPath"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.TaskResult"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">          </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Pass"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"End"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>First, save the JSON above in a template format. You can use the extension <code>.tpl</code> or <code>.tftpl</code>. Although Terraform recommends using the second option, there's no hard rule about which to use.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="case-1-injecting-a-variable-into-json">Case 1: Injecting a variable into JSON<a href="#case-1-injecting-a-variable-into-json" class="hash-link" aria-label="Direct link to Case 1: Injecting a variable into JSON" title="Direct link to Case 1: Injecting a variable into JSON">‚Äã</a></h2><p>Let‚Äôs begin by updating the <code>FunctionName</code> value in the template, using string interpolation:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/templates/stepfunction_definition.tftpl (extract)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"Handle Notification"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:states:::lambda:invoke"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"OutputPath"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.Payload"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"Payload.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"FunctionName"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"${lambda_function_name}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"End"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To render the template as a valid JSON, we can use Terraform‚Äôs <code>templatefile</code> function. It takes two arguments: the template file path and a map of variables that will be injected at runtime. For the sake of the argument, let‚Äôs keep our new module as dynamic as possible. Locals, variables and resources are also included just to show how things work together.</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/stepfunction.tf (full file)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">locals</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">file</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> templatefile(</span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation keyword" style="color:#00009f">path</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation type variable" style="color:#36acaa">module</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/templates/stepfunction_definition.tpl"</span><span class="token plain">, </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.lambda_function_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">variable</span><span class="token keyword type variable" style="color:#36acaa"> "lambda_function_name" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Lambda function name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">type</span><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">resource </span><span class="token keyword type variable" style="color:#36acaa">"aws_sfn_state_machine"</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sfn_state_machine"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">name</span><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.step_function_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">role_arn</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.sf_role_arn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">definition</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now we write a top level <code>main.tf</code>, where the actual values go.</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">main.tf (full file)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">module</span><span class="token keyword type variable" style="color:#36acaa"> "my_step_function" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">source</span><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./modules/step_functions"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">step_function_name</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">sf_role_arn</span><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:iam::123456789012:role/autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_lambda"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To check that your variable was successfully injected, run <code>terraform init &amp;&amp; terraform plan</code>.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="case-2-injecting-a-list-into-a-json">Case 2: Injecting a list into a JSON<a href="#case-2-injecting-a-list-into-a-json" class="hash-link" aria-label="Direct link to Case 2: Injecting a list into a JSON" title="Direct link to Case 2: Injecting a list into a JSON">‚Äã</a></h2><p>As a refresher, we will abstract this whole list:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/templates/stepfunction_definition.tftpl (extract)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token property" style="color:#36acaa">"Choice"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Choices"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">                             </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">                 </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                      </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SSM Execution-InstanceId"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">     </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.InstanceId"</span><span class="token plain">              </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                      </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"SSM Execution-SecurityGroupIds"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> |</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.SecurityGroupIds"</span><span class="token plain">        </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">                 </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">                                       </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Default"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>So let‚Äôs refactor the template again. We‚Äôll use a Terraform function called <code>jsonencode</code>, as it ensures that the list of objects we‚Äôre passing to the template will be properly rendered as JSON:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/templates/stepfunction_definition.tftpl (extract)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token property" style="color:#36acaa">"Choice"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Choices"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">jsonencode(choices_list)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Default"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, we‚Äôll try two ways to feed the template with our dynamic list.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-simplest-solution-static-list">The simplest solution: static list<a href="#the-simplest-solution-static-list" class="hash-link" aria-label="Direct link to The simplest solution: static list" title="Direct link to The simplest solution: static list">‚Äã</a></h3><p>One option is to create a variable that will pass a ready-made list for you:</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/stepfunction.tf (extract)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">locals</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">file</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> templatefile(</span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation keyword" style="color:#00009f">path</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation type variable" style="color:#36acaa">module</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/templates/stepfunction_definition.tpl"</span><span class="token plain">, </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.lambda_function_name</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">choices_list</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.my_list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">variable</span><span class="token keyword type variable" style="color:#36acaa"> "my_list" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"A list of whatever"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">type</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, in top level module, pass the variable values. The JSON is now dynamic, but the list is pretty much ‚Äústatic‚Äù.</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">main.tf (full file)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">module</span><span class="token keyword type variable" style="color:#36acaa"> "my_step_function" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">source</span><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./modules/step_functions"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">step_function_name</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">sf_role_arn</span><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:iam::123456789012:role/autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_lambda"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">my_list</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"SSM Execution-InstanceId"</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.InstanceId"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-logic-heavy-solution-dynamic-list">The logic-heavy solution: dynamic list<a href="#the-logic-heavy-solution-dynamic-list" class="hash-link" aria-label="Direct link to The logic-heavy solution: dynamic list" title="Direct link to The logic-heavy solution: dynamic list">‚Äã</a></h3><p>What if you want the list itself to be dynamic too? For example, you want the values for <code>Next</code> and <code>Variable</code> to be extracted from a parameter and injected to list before it‚Äôs sent to the json?
In our example, the values that populate <code>Next</code> and <code>Variable</code> come from keys provided by <code>ssm_params</code>, in the top level file:</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">main.tf (extract)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">module</span><span class="token keyword type variable" style="color:#36acaa"> "my_step_function" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">source</span><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./modules/step_functions"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">step_function_name</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">sf_role_arn</span><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:iam::123456789012:role/autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_lambda"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#  Static list is no longer here</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">ssm_params</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"InstanceId"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"States.Array($.InstanceId)"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,    </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"SecurityGroupIds"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"States.Array($.SecurityGroupIds)"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now our module becomes:</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/stepfunction.tf (full file)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">locals</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">choices_list</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> flatten(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">for item in var.ssm_params: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for key, value in item : </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"SSM Execution-</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">file</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> templatefile(</span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation keyword" style="color:#00009f">path</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation type variable" style="color:#36acaa">module</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/templates/stepfunction_definition.tpl"</span><span class="token plain">, </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.lambda_function_name,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">choices_list</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.choices_list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">variable</span><span class="token keyword type variable" style="color:#36acaa"> "lambda_function_name" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Lambda function name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">type</span><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">variable</span><span class="token keyword type variable" style="color:#36acaa"> "ssm_params" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"List of SSM param objects to be injected into the Step Function definition"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">type</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">resource </span><span class="token keyword type variable" style="color:#36acaa">"aws_sfn_state_machine"</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sfn_state_machine"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">name</span><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.step_function_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">role_arn</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> aws_iam_role.step_function_role_arn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">definition</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Starting with the line <code>choices_list = flatten([for item in var.ssm_params:</code> ignore <code>flatten</code> for a bit and look at the loop. Because <code>ssm_params</code> is a list, we have to loop through it to access each item. The loop is wrapped in square brackets, which means the output will be a list. The <code>:</code> that follows is just part of the loop syntax.</p><p>Next line, another loop: <code>for key, value in item : {</code> . This loop goes through each object in <code>ssm_params</code> to access key and the value, so we can extract and restructure the data. The loop is also wrapped with square brackets, meaning that every object will unfortunately be inside their own list.</p><p>Now, remember <code>flatten</code>? We're using this Terraform function because, as each loop returns a list, the result looks like this: <code>[[obj1],[obj2]]</code>. But we need a clean list of objects, and flatten can get rid of the unnecessary nesting.</p><p>Done.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="case-3-injecting-an-object-into-a-json">Case 3: Injecting an object into a JSON<a href="#case-3-injecting-an-object-into-a-json" class="hash-link" aria-label="Direct link to Case 3: Injecting an object into a JSON" title="Direct link to Case 3: Injecting an object into a JSON">‚Äã</a></h2><p>Now, the most exciting part. We will abstract whole objects. (In this particular case, this means whole steps can become dynamic despite Amazon States Language!)
You see all this code below? We're refactoring IT ALL away!</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token property" style="color:#36acaa">"Steps"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"SSM Execution-InstanceId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">            </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"DocumentName.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.DocumentName"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">                    </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"InstanceId.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"States.Array($.InstanceId)"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">          </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">           </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:states:::aws-sdk:ssm:startAutomationExecution"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ResultPath"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.TaskResult"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">          </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"SSM Execution-SecurityGroupIds"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">        </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"DocumentName.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.DocumentName"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">                    </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"SecurityGroupIds.$"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"States.Array($.SecurityGroupIds)"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">          </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">             </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:states:::aws-sdk:ssm:startAutomationExecution"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"ResultPath"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"$.TaskResult"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">          </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">                                    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As usual, let‚Äôs modify the template:</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/templates/stepfunction_definition.tftpl (extract)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token property" style="color:#36acaa">"States"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Choice"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"Choices"</span><span class="token plain">: $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">jsonencode(choices)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"Default"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    %</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> for key, data in ssm_execution </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"${key}"</span><span class="token plain">: $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">jsonencode(data)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    %</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> endfor </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Handle Notification"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">&lt;--- blahblah--&gt;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Here‚Äôs where I ask you to trust Terraform even if your linter freaks out.</p><p>What‚Äôs happening? We‚Äôre using the <a href="https://developer.hashicorp.com/terraform/language/expressions/strings#directives" target="_blank" rel="noopener noreferrer">Terraform directive</a> syntax <code>%{}</code> to write a dynamic string (yeah, templates are treated as strings).</p><p>The line <code>%{ for key, data in ssm_execution }</code> informs the <code>templatefile</code> function that an iteration is coming, and it will end when it reaches the line <code>%{ endfor }</code>. In the meanwhile, it should keep creating a key-value pair with the format <code>"my_key": {"some": "json"},</code>.</p><p>Pretty cool, uh?</p><p>So now let‚Äôs add the local <code>ssm_execution</code>, the logic that will populate all this.</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/stepfunction.tf (extract)</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">locals</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">choices</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> flatten(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">for item in var.ssm_params: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for key, value in item : </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"SSM Execution-</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">ssm_execution</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> merge(flatten(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">for item in var.ssm_params: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                    for key, value in item : </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                        </span><span class="token property" style="color:#36acaa">"SSM Execution-${key}"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                              </span><span class="token property" style="color:#36acaa">"DocumentName.$"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.DocumentName"</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                              </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"$.${key}"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">value</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"arn:aws:states:::aws-sdk:ssm:startAutomationExecution"</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Handle Notification"</span><span class="token plain">,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"ResultPath"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.TaskResult"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">                )...)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">file</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> templatefile(</span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation keyword" style="color:#00009f">path</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation type variable" style="color:#36acaa">module</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/templates/stepfunction_definition.tpl"</span><span class="token plain">, </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.lambda_function_name,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">choices_list</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.choices,</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">ssm_execution</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.ssm_execution</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We‚Äôre already familiar with loops and flatten, so let‚Äôs talk about the new kids on the block: <code>merge</code> and <code>...</code>.</p><p><code>merge</code> is a terraform function that takes multiple objects and merge them together into a single object. So, if we have two objects like</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"a"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"b"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"c"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"d"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>the <code>merge</code> function will consolidate them to:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"a"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"b"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"c"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"d"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And if you were paying attention, you noticed that the merge function in our module is <strong>not</strong> taking several object as arguments, but a flatten function (which outputs a single list). We have <code>...</code> to thank for the trick.
In Terraform, <code>...</code> (three dots) work like the Javascript spread operator: it expands our list into separate arguments.
So that‚Äôs it. Our final template will literally be half the size of our original JSON, it‚Äôs dynamic, reusable, and best of all ‚Äî frees you from ever handling Amazon States Language in your project again.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="final-files">Final files<a href="#final-files" class="hash-link" aria-label="Direct link to Final files" title="Direct link to Final files">‚Äã</a></h2><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/templates/stepfunction_definition.tpl</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Comment"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"My state machine"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"StartAt"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"States"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Handle Notification"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"arn:aws:states:::lambda:invoke"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"OutputPath"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.Payload"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token property" style="color:#36acaa">"Payload.$"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token property" style="color:#36acaa">"FunctionName"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">lambda_function_name</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"End"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Choice"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Choice"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Choices"</span><span class="token plain">: $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">jsonencode(choices)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Default"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        %</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> for key, data in ssm_execution </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"${key}"</span><span class="token plain">: $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">jsonencode(data)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        %</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> endfor </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Pass"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Pass"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"End"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">modules/stepfunction.tf</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">locals</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">choices</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> flatten(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">for item in var.ssm_params: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for key, value in item : </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"SSM Execution-</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">ssm_execution</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> merge(flatten(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">for item in var.ssm_params: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    for key, value in item : </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token property" style="color:#36acaa">"SSM Execution-${key}"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Type"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Task"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                              </span><span class="token property" style="color:#36acaa">"DocumentName.$"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.DocumentName"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                              </span><span class="token property" style="color:#36acaa">"Parameters"</span><span class="token plain">: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"$.${key}"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">value</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"arn:aws:states:::aws-sdk:ssm:startAutomationExecution"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"Handle Notification"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            </span><span class="token property" style="color:#36acaa">"ResultPath"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.TaskResult"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                )...)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">file</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> templatefile(</span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation keyword" style="color:#00009f">path</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation type variable" style="color:#36acaa">module</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">/templates/stepfunction_definition.tpl"</span><span class="token plain">, </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.lambda_function_name,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">choices_list</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.choices,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">ssm_execution</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.ssm_execution</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">variable</span><span class="token keyword type variable" style="color:#36acaa"> "lambda_function_name" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Lambda function name"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">type</span><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">variable</span><span class="token keyword type variable" style="color:#36acaa"> "ssm_params" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"List of SSM param objects to be injected into the Step Function definition"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">type</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">resource </span><span class="token keyword type variable" style="color:#36acaa">"aws_sfn_state_machine"</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sfn_state_machine"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">name</span><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.step_function_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">role_arn</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> var.sf_role_arn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">definition</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> local.file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">main.tf</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">module</span><span class="token keyword type variable" style="color:#36acaa"> "my_step_function" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">source</span><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./modules/step_functions"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">step_function_name</span><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">sf_role_arn</span><span class="token plain">           </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:aws:iam::123456789012:role/autoremediation_sf"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">lambda_function_name</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"autoremediation_lambda"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">ssm_params</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">                </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"InstanceId"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"States.Array($.InstanceId)"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">,    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"SecurityGroupIds"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"States.Array($.SecurityGroupIds)"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>infra</category>
            <category>terraform</category>
            <category>IaC</category>
            <category>step functions</category>
            <category>devops</category>
        </item>
        <item>
            <title><![CDATA[Bypassing Terraform error: ‚ÄúThe true and false result expressions must have consistent types‚Äù]]></title>
            <link>https://magmanu.github.io/blog/tech/terraform-ternary-error</link>
            <guid>https://magmanu.github.io/blog/tech/terraform-ternary-error</guid>
            <pubDate>Sat, 18 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Have you ever came across this Terraform error ‚Äî when you intentionally want your ternary to output different types?]]></description>
            <content:encoded><![CDATA[<p>Have you ever came across this Terraform error ‚Äî when you intentionally want your ternary to output different types?</p><blockquote><p>The true and false result expressions must have consistent types</p></blockquote><p>To bypass this Terraform limitation, check the tip below. I'll follow it with two examples to clarify the usage:</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token property" style="color:#36acaa">attribute</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;desired output if </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">&gt;, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;desired output if </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">&lt;condition&gt; ? </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> : </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="simple-example">Simple example<a href="#simple-example" class="hash-link" aria-label="Direct link to Simple example" title="Direct link to Simple example">‚Äã</a></h2><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">locals</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">dynamic_value</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"region"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation keyword" style="color:#00009f">var</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation type variable" style="color:#36acaa">region</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">"unavailable"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">var.region </span><span class="token punctuation" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"eu-west-1"</span><span class="token plain"> ? </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> : </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Here, <code>local.dynamic_value</code> will return an object if the AWS region is Ireland, or the string <code>"unavailable"</code> for any other region.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="wait-whats-just-happened">Wait, what's just happened?<a href="#wait-whats-just-happened" class="hash-link" aria-label="Direct link to Wait, what's just happened?" title="Direct link to Wait, what's just happened?">‚Äã</a></h3><p>Instead of using the ternary in the traditional way, we defined a tuple (aka, a list with mixed types), and used the ternary to return the index for the output we really want. Thanks mariux for the trick.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="less-simple-example">Less simple example<a href="#less-simple-example" class="hash-link" aria-label="Direct link to Less simple example" title="Direct link to Less simple example">‚Äã</a></h2><p>You can also inject dynamic outputs if needs be. I'm not saying this is Terraform best practice, or that it will be pretty. But sometimes a woman has to do what she has to do.</p><p>In my case, I was trying to abstract a Step Function <code>Choice</code>. The ternary logic I needed was: if the object contains only one key, return a certain JSON structure. If the object contains multiple keys, return a different JSON structure.
And this is how my condition panned out:</p><div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># There is a reason why this variable is a list</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># but that is beside the point now</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">variable</span><span class="token keyword type variable" style="color:#36acaa"> "ssm_params" </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Parameter required by SSM Documents to enable KMS key rotation"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">default</span><span class="token plain">     </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token property" style="color:#36acaa">"KeyId"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"States.Array($.KeyId)"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"AutomationAssumeRole"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"States.Array($.AutomationAssumeRole)"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">locals</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">choices</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">for item in var.ssm_params: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># desired output if true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    merge(flatten(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      for key, value in item: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"SSM-</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">)...),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># desired output if false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    merge(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># Case: Choice step has multiple conditions (AND) </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token property" style="color:#36acaa">"And"</span><span class="token plain"> : </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          for key, value in item: </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token property" style="color:#36acaa">"IsPresent"</span><span class="token plain">: </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token property" style="color:#36acaa">"Variable"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"$.</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation" style="color:#e3116c">key</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"Next"</span><span class="token plain">: </span><span class="token string" style="color:#e3116c">"SSM-</span><span class="token string interpolation punctuation" style="color:#393A34">$</span><span class="token string interpolation punctuation" style="color:#393A34">{</span><span class="token string interpolation function" style="color:#d73a49">join</span><span class="token string interpolation punctuation" style="color:#393A34">(</span><span class="token string interpolation string" style="color:#e3116c">""</span><span class="token string interpolation punctuation" style="color:#393A34">,</span><span class="token string interpolation" style="color:#e3116c"> </span><span class="token string interpolation function" style="color:#d73a49">sort</span><span class="token string interpolation punctuation" style="color:#393A34">(</span><span class="token string interpolation punctuation" style="color:#393A34">[</span><span class="token string interpolation function" style="color:#d73a49">keys</span><span class="token string interpolation punctuation" style="color:#393A34">(</span><span class="token string interpolation" style="color:#e3116c">item</span><span class="token string interpolation punctuation" style="color:#393A34">)</span><span class="token string interpolation punctuation" style="color:#393A34">]</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation punctuation" style="color:#393A34">.</span><span class="token string interpolation punctuation" style="color:#393A34">)</span><span class="token string interpolation punctuation" style="color:#393A34">)</span><span class="token string interpolation punctuation" style="color:#393A34">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">...)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># condition</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      length(flatten(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">keys(item)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">)) </span><span class="token punctuation" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> ? </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> : </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Don't ask me how my laptop haven‚Äôt gone through the window. But there you have it ‚Äî enjoy your newfound freedom :P</p>]]></content:encoded>
            <category>infra</category>
            <category>terraform</category>
            <category>workarounds</category>
            <category>devops</category>
        </item>
        <item>
            <title><![CDATA[How to Migrate CodeCommit to GitHub ‚Äî and Keep your Amplify Pipeline]]></title>
            <link>https://magmanu.github.io/blog/tech/migrate-codecommit-to-github</link>
            <guid>https://magmanu.github.io/blog/tech/migrate-codecommit-to-github</guid>
            <pubDate>Wed, 13 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[This tutorial includes guidance for three different scenarios in your GitHub administration:]]></description>
            <content:encoded><![CDATA[<p>This tutorial includes guidance for three different scenarios in your GitHub administration:</p><ol><li>when your repo is in your personal account;</li><li>when your app is under a GitHub Org and admins grant you the permissions you need; and</li><li>when your repo is under a GitHub Org and admins do NOT grant you the permissions you need.</li></ol><p><em>Pre-requisites: Relevant access and permissions for CodeCommit and Amplify. You also need a working GitHub account.</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="migrating-your-repo">Migrating Your Repo<a href="#migrating-your-repo" class="hash-link" aria-label="Direct link to Migrating Your Repo" title="Direct link to Migrating Your Repo">‚Äã</a></h2><ol><li>Open your CLI and cd into your existing CodeCommit local folder.</li><li>Run <code>git remote get-url origin</code> to get the external clone URL for the project you plan to migrate to GitHub.</li><li>Create a temporary folder by running <code>mkdir ../temp-migration</code> and open it in the CLI by running <code>cd ../temp-migration</code>.</li><li>Run <code>git clone --bare</code> followed by the clone URL you got in step 2. An example would be <code>git clone --bare &lt;https://git-codecommit.eu-west-1.amazonaws.com/v1/repos/name-of-your-codecommit-directory&gt;</code>.</li></ol><br><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Educational note</div><div class="admonitionContent_S0QG"><p>The flag <code>--bare</code> is a way to fully clone your repo while cutting all its ties with the remote (in CodeCommit, in this case). You still get all your branches, tags and everything, but the cloned repo is completely independent from the remote.</p></div></div><br><ol start="5"><li>Create a new GitHub repo. To prevent issues, don‚Äôt add any README, .gitignore or anything. After you click ‚ÄúCreate repo‚Äù, the only thing you should do is to copy the external clone URL as shown below. Don‚Äôt run any git init, fist commit or anything. Just copy the relevant path as shown below.</li></ol><br><p><img loading="lazy" alt="Git clone SSH" src="/blog/assets/images/clone_ssh-5be730cf4d2ec7e3548855fc55af9e16.webp" width="1400" height="508" class="img_ev3q"></p><br><ol start="6"><li>Back to your terminal, cd into your bare git repo by running <code>cd name-of-your-codecommit-directory.git</code> and run <code>git push --mirror</code> followed by the clone path you got in step 5. In my case, it will be <code>git push --mirror &lt;https://github.com/my-username/my-project.git&gt;</code>.</li></ol><p>That‚Äôs it, migration is complete now.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="confirm">Confirm<a href="#confirm" class="hash-link" aria-label="Direct link to Confirm" title="Direct link to Confirm">‚Äã</a></h3><p>To confirm all went well, go back to GitHub and refresh the page. You‚Äôll see that your repo will be there as expected, including all your commit history, branches and everything. To start working on your migrated GitHub repo, simply clone it and get on with business as usual :)</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="clean-up">Clean up<a href="#clean-up" class="hash-link" aria-label="Direct link to Clean up" title="Direct link to Clean up">‚Äã</a></h3><p>If you followed the instructions strictly, now it‚Äôs time to delete your temporary folder. Go back to your terminal and run <code>cd ../.. and rm -rf temp-migration</code>. If you used your OS‚Äôs tmp folder instead, skip this step.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rewiring-your-amplify-pipeline">Rewiring your Amplify Pipeline<a href="#rewiring-your-amplify-pipeline" class="hash-link" aria-label="Direct link to Rewiring your Amplify Pipeline" title="Direct link to Rewiring your Amplify Pipeline">‚Äã</a></h2><p>Now that you migrated the code to GitHub, how do you leverage your already existing Amplify pipeline that was linked to the CodeCommit repo?</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="run--the-update-app-command">Run  the <code>update-app</code> command<a href="#run--the-update-app-command" class="hash-link" aria-label="Direct link to run--the-update-app-command" title="Direct link to run--the-update-app-command">‚Äã</a></h3><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token assign-left variable" style="color:#36acaa">AWS_PROFILE</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">YOUR_PROFILE </span><span class="token assign-left variable" style="color:#36acaa">AWS_DEFAULT_REGION</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">YOUR_REGION aws amplify update-app --app-id AMPLIFY_APP_ID </span><span class="token parameter variable" style="color:#36acaa">--repository</span><span class="token plain"> REPOSITORY_URL --access-token ACCESS_TOKEN</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>AMPLIFY_APP_ID</code>: To find your app id, go to the Amplify console. Under App settings, click General and look for the App ARN. The app id should be the alphanumeric string at the very end of the ARN. You can find it in your Amplify console: App settings &gt; General. The id is shown as ‚ÄúREDACTED‚Äù in the screenshot below:</p><br><p><img loading="lazy" alt="Amplify App Id" src="/blog/assets/images/amplify_data-ed02eb0516b95e7d3782a0b619920733.webp" width="1400" height="459" class="img_ev3q"></p><br><p><code>REPOSITORY_URL</code>: It‚Äôs the one you got in the step 5 of the migration.
<code>ACCESS_TOKEN</code>: The access token is s a Personal Access Token that you can generate in GitHub. Beware that this token has to be generated by the GitHub repo owner.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="re-authenticate-your-amplify-app">Re-authenticate your Amplify app<a href="#re-authenticate-your-amplify-app" class="hash-link" aria-label="Direct link to Re-authenticate your Amplify app" title="Direct link to Re-authenticate your Amplify app">‚Äã</a></h3><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Real life XP</div><div class="admonitionContent_S0QG"><p>Companies can be very strict about the GitHub Apps they approve. If you get blocked because your admins, for whatever reason, won't approve the Amplify App, jump to the section <a href="#the-webhook-approach">"The Webhook Approach"</a>.</p></div></div><p>Now you can reconnect your app. In the same page you got your ARN, if you look above the ARN you‚Äôll find a button ‚ÄúReconnect repository‚Äù. When you click it, you‚Äôll be directed to the Oath flow in GitHub.</p><ul><li><strong>If the migrated repo is NOT under an Organization</strong>, you can click the ‚ÄúAuthorize aws-amplify-console‚Äù button. You‚Äôll be redirected to the Amplify console, and once there, click again the reconnect repository, select the relevant repo and off you go! Enjoy!</li><li><strong>If the migrated repo is under your Organization</strong>, you can request the OAuth permission to the Amplify App by clicking a button. It will show a request pending message until your admin approves it (you‚Äôll receive an email when they do).</li></ul><br><p><img loading="lazy" alt="Authorize Amplify Github App" src="/blog/assets/images/authorize_amplify_app-0c09d0e0746dd8ee0e5bf2f70539c74a.webp" width="1186" height="1206" class="img_ev3q"></p><br><p>Once Oauth is granted, go back to your Amplify app and click Reconnect repository again. You'll be shown repos both from your org and from your own account to choose from. Select the relevant one and have fun with your new migrated repos!</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-webhook-approach">The Webhook Approach<a href="#the-webhook-approach" class="hash-link" aria-label="Direct link to The Webhook Approach" title="Direct link to The Webhook Approach">‚Äã</a></h3><p>An alternative to using the Amplify GitHub App is to create an incoming webhook in Amplify instead.
To do that, under App settings, select Build settings nd click Create Webhook (both shown in orange below).</p><br><p><img loading="lazy" alt="Amplify Build Settings" src="/blog/assets/images/amplify_build_settings-937fb3f3220996941f487bd5ed440afe.webp" width="1181" height="295" class="img_ev3q"></p><br><p>In the pop-up, type in a name and select a branch to build. Your new webhook will show in the Amplify interface. Copy its URL, we‚Äôll use it in GitHub.</p><br><p><img loading="lazy" alt="Amplify Incming Webhooks" src="/blog/assets/images/amplify_incoming_webhooks-e4c6bd369f275c88df521b33d531b072.webp" width="769" height="234" class="img_ev3q"></p><br><p>Now go back to your migrated GitHub repo, select Settings &gt; Webhooks and click the button Add webhook.</p><br><p><img loading="lazy" alt="Adding GitHub Webhooks" src="/blog/assets/images/github_webhooks-143154a73be16465c0004e7d5de274d3.webp" width="1264" height="868" class="img_ev3q"></p><p>Workaround completed.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="caveats-of-the-webhook-approach">Caveats of the Webhook Approach<a href="#caveats-of-the-webhook-approach" class="hash-link" aria-label="Direct link to Caveats of the Webhook Approach" title="Direct link to Caveats of the Webhook Approach">‚Äã</a></h3><p>If you go down the webhook path, be mindful that:</p><ul><li>If you need to connect multiple branches to Amplify, you need to create a webhook in Amplify to each of them, and add each to GitHub, one by one. If you feel tempted to automate it, have a chat to your GitHub Org admin to clear up how the OAuth permission for the Amplify App can be done. Automation in this end is an overkill and waste of time.</li><li>Any git push will trigger the webhook in every single frontend deployment in your Amplify. In other words, if you have the branches ‚Äúmain‚Äù, ‚Äúrelease‚Äù, ‚Äúdev‚Äù, ‚Äúfeature/a‚Äù, and ‚Äúfeature/b‚Äù, every time your colleague pushes his changes in ‚Äúfeature/b‚Äù to GitHub, the pipeline will be triggered for all the five branches.</li></ul><p>Hope this was helpful, see you!</p>]]></content:encoded>
            <category>infra</category>
            <category>github</category>
            <category>amplify</category>
            <category>aws</category>
            <category>ci/cd</category>
            <category>tutorial</category>
        </item>
    </channel>
</rss>